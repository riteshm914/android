plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-allopen'
}

allOpen {
    annotation('com.demo.mvvm.app.utils.Mockable')
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.demo.mvvm.app"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables {
            useSupportLibrary = true
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


    buildFeatures {

        dataBinding true

        // for view binding:
        // viewBinding true
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            buildConfigField "String", "BASE_URL", "\"https://dl.dropboxusercontent.com/\""
            versionCode 1
            versionName "1.0"
        }
        prodction {
            buildConfigField "String", "BASE_URL", "\"https://test-prod.com/\""
            versionCode 1
            versionName "1.0"
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude("META-INF/*.kotlin_module")
        exclude 'win32-x86/attach_hotspot_windows.dll'
        exclude 'META-INF/licenses/ASM'
        exclude 'win32-x86-64/attach_hotspot_windows.dll'
    }
}

dependencies {

    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'androidx.activity:activity-ktx:1.1.0'

    //Swipe Refresh
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Annotation processor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1..0'

    /* Gson */
    implementation "com.google.code.gson:gson:$gson_version"

    /* Glide */
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    /* Multi Dex */
    implementation "androidx.multidex:multidex:$multidex_version"

    /* Hilt Dependency Injection */
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:3.14.9"
    implementation "com.squareup.okhttp3:logging-interceptor:3.4.1"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"



    // Unit Testing
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'

    testImplementation "org.mockito:mockito-core:3.4.6"
  //  androidTestImplementation "org.mockito:mockito-core:3.4.6"
  //  androidTestImplementation "org.mockito:mockito-inline:3.4.6"
    androidTestImplementation 'org.mockito:mockito-android:2.22.0'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.9'

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

}